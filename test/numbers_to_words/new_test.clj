(ns numbers-to-words.new-test
  (:require [clojure.test :refer :all]
            [numbers-to-words.new :refer :all]))

#_(testing "a message goes here"
  (are [actual expected] (= (split-into-terms actual) expected)))

(deftest splitting-into-terms
  (testing "random assorted numbers"
    (are [actual expected] (= (split-into-terms actual) expected)
      0 [0]
      5 [5]
      10 [10]
      15 [15]
      20 [20]
      21 [20 1]
      88 [80 8]
      100 [1 100]
      101 [1 100 1]
      121 [1 100 20 1]
      180 [1 100 80]
      1100 [1 1000 1 100]
      1123 [1 1000 1 100 20 3]
      1700 [1 1000 7 100]
      11234 [11 1000 2 100 30 4]
      17000 [17 1000]
      19023 [19 1000 20 3]
      100000 [1 100 1000]
      123456 [1 100 20 3 1000 4 100 50 6]))
  (testing "units"
    (are [actual expected] (= (split-into-terms actual) expected)
      0 [0]
      1 [1]
      2 [2]
      3 [3]
      4 [4]
      5 [5]
      6 [6]
      7 [7]
      8 [8]
      9 [9]
      10 [10]
      11 [11]
      12 [12]
      13 [13]
      14 [14]
      15 [15]
      16 [16]
      17 [17]
      18 [18]
      19 [19]      
      20 [20]
      30 [30]
      40 [40]
      50 [50]
      60 [60]
      70 [70]
      80 [80]
      90 [90]))
  (testing "twenties thirties etc"
    (are [actual expected] (= (split-into-terms actual) expected)
      21 [20 1]
      22 [20 2]
      23 [20 3]
      24 [20 4]
      25 [20 5]
      26 [20 6]
      27 [20 7]
      28 [20 8]
      29 [20 9]
      31 [30 1]
      32 [30 2]
      33 [30 3]
      34 [30 4]
      35 [30 5]
      36 [30 6]
      37 [30 7]
      38 [30 8]
      39 [30 9]
      41 [40 1]
      42 [40 2]
      43 [40 3]
      44 [40 4]
      45 [40 5]
      46 [40 6]
      47 [40 7]
      48 [40 8]
      49 [40 9]
      51 [50 1]
      52 [50 2]
      53 [50 3]
      54 [50 4]
      55 [50 5]
      56 [50 6]
      57 [50 7]
      58 [50 8]
      59 [50 9]
      61 [60 1]
      62 [60 2]
      63 [60 3]
      64 [60 4]
      65 [60 5]
      66 [60 6]
      67 [60 7]
      68 [60 8]
      69 [60 9]
      71 [70 1]
      72 [70 2]
      73 [70 3]
      74 [70 4]
      75 [70 5]
      76 [70 6]
      77 [70 7]
      78 [70 8]
      79 [70 9]
      81 [80 1]
      82 [80 2]
      83 [80 3]
      84 [80 4]
      85 [80 5]
      86 [80 6]
      87 [80 7]
      88 [80 8]
      89 [80 9]
      91 [90 1]
      92 [90 2]
      93 [90 3]
      94 [90 4]
      95 [90 5]
      96 [90 6]
      97 [90 7]
      98 [90 8]
      99 [90 9]))
  (testing "100 200 etc.."
    (are [actual expected] (= (split-into-terms actual) expected)
      100 [1 100]
      200 [2 100]
      300 [3 100]
      400 [4 100]
      500 [5 100]
      600 [6 100]
      700 [7 100]
      800 [8 100]
      900 [9 100]))
  (testing "101 102 etc.."
    (are [actual expected] (= (split-into-terms actual) expected)
      101 [1 100 1]
      102 [1 100 2]
      103 [1 100 3]
      104 [1 100 4]
      105 [1 100 5]
      106 [1 100 6]
      107 [1 100 7]
      108 [1 100 8]
      109 [1 100 9]
      110 [1 100 10]
      111 [1 100 11]
      112 [1 100 12]
      113 [1 100 13]
      114 [1 100 14]
      115 [1 100 15]
      116 [1 100 16]
      117 [1 100 17]
      118 [1 100 18]
      119 [1 100 19]
      120 [1 100 20]))
  (testing "121 122...199"
    (are [actual expected] (= (split-into-terms actual) expected)
      121 [1 100 20 1]
      122 [1 100 20 2]
      123 [1 100 20 3]
      124 [1 100 20 4]
      125 [1 100 20 5]
      126 [1 100 20 6]
      127 [1 100 20 7]
      128 [1 100 20 8]
      129 [1 100 20 9]
      131 [1 100 30 1]
      132 [1 100 30 2]
      133 [1 100 30 3]
      134 [1 100 30 4]
      135 [1 100 30 5]
      136 [1 100 30 6]
      137 [1 100 30 7]
      138 [1 100 30 8]
      139 [1 100 30 9]
      141 [1 100 40 1]
      142 [1 100 40 2]
      143 [1 100 40 3]
      144 [1 100 40 4]
      145 [1 100 40 5]
      146 [1 100 40 6]
      147 [1 100 40 7]
      148 [1 100 40 8]
      149 [1 100 40 9]
      151 [1 100 50 1]
      152 [1 100 50 2]
      153 [1 100 50 3]
      154 [1 100 50 4]
      155 [1 100 50 5]
      156 [1 100 50 6]
      157 [1 100 50 7]
      158 [1 100 50 8]
      159 [1 100 50 9]
      161 [1 100 60 1]
      162 [1 100 60 2]
      163 [1 100 60 3]
      164 [1 100 60 4]
      165 [1 100 60 5]
      166 [1 100 60 6]
      167 [1 100 60 7]
      168 [1 100 60 8]
      169 [1 100 60 9]
      171 [1 100 70 1]
      172 [1 100 70 2]
      173 [1 100 70 3]
      174 [1 100 70 4]
      175 [1 100 70 5]
      176 [1 100 70 6]
      177 [1 100 70 7]
      178 [1 100 70 8]
      179 [1 100 70 9]
      181 [1 100 80 1]
      182 [1 100 80 2]
      183 [1 100 80 3]
      184 [1 100 80 4]
      185 [1 100 80 5]
      186 [1 100 80 6]
      187 [1 100 80 7]
      188 [1 100 80 8]
      189 [1 100 80 9]
      191 [1 100 90 1]
      192 [1 100 90 2]
      193 [1 100 90 3]
      194 [1 100 90 4]
      195 [1 100 90 5]
      196 [1 100 90 6]
      197 [1 100 90 7]
      198 [1 100 90 8]
      199 [1 100 90 9]))
  (testing "1000 2000..."
    (are [actual expected] (= (split-into-terms actual) expected)
      1000 [1 1000]
      2000 [2 1000]
      3000 [3 1000]
      4000 [4 1000]
      5000 [5 1000]
      6000 [6 1000]
      7000 [7 1000]
      8000 [8 1000]
      9000 [9 1000]
      10000 [10 1000]
      11000 [11 1000]
      12000 [12 1000]
      13000 [13 1000]
      14000 [14 1000]
      15000 [15 1000]
      16000 [16 1000]
      17000 [17 1000]
      18000 [18 1000]
      19000 [19 1000]
      20000 [20 1000]))
  (testing "21000..."
    (are [actual expected] (= (split-into-terms actual) expected)
      21000 [20 1 1000]
      22000 [20 2 1000]
      23000 [20 3 1000]
      24000 [20 4 1000]
      25000 [20 5 1000]
      26000 [20 6 1000]
      27000 [20 7 1000]
      28000 [20 8 1000]
      29000 [20 9 1000]
      31000 [30 1 1000]
      32000 [30 2 1000]
      33000 [30 3 1000]
      34000 [30 4 1000]
      35000 [30 5 1000]
      36000 [30 6 1000]
      37000 [30 7 1000]
      38000 [30 8 1000]
      39000 [30 9 1000]
      41000 [40 1 1000]
      42000 [40 2 1000]
      43000 [40 3 1000]
      44000 [40 4 1000]
      45000 [40 5 1000]
      46000 [40 6 1000]
      47000 [40 7 1000]
      48000 [40 8 1000]
      49000 [40 9 1000]
      51000 [50 1 1000]
      52000 [50 2 1000]
      53000 [50 3 1000]
      54000 [50 4 1000]
      55000 [50 5 1000]
      56000 [50 6 1000]
      57000 [50 7 1000]
      58000 [50 8 1000]
      59000 [50 9 1000]
      61000 [60 1 1000]
      62000 [60 2 1000]
      63000 [60 3 1000]
      64000 [60 4 1000]
      65000 [60 5 1000]
      66000 [60 6 1000]
      67000 [60 7 1000]
      68000 [60 8 1000]
      69000 [60 9 1000]
      71000 [70 1 1000]
      72000 [70 2 1000]
      73000 [70 3 1000]
      74000 [70 4 1000]
      75000 [70 5 1000]
      76000 [70 6 1000]
      77000 [70 7 1000]
      78000 [70 8 1000]
      79000 [70 9 1000]
      81000 [80 1 1000]
      82000 [80 2 1000]
      83000 [80 3 1000]
      84000 [80 4 1000]
      85000 [80 5 1000]
      86000 [80 6 1000]
      87000 [80 7 1000]
      88000 [80 8 1000]
      89000 [80 9 1000]
      91000 [90 1 1000]
      92000 [90 2 1000]
      93000 [90 3 1000]
      94000 [90 4 1000]
      95000 [90 5 1000]
      96000 [90 6 1000]
      97000 [90 7 1000]
      98000 [90 8 1000]
      99000 [90 9 1000]))
  (testing "1000s with hundreds, tens and units place after them"
    (are [actual expected] (= (split-into-terms actual) expected)
      1001 [1 1000 1]
      1002 [1 1000 2]
      1010 [1 1000 10]
      1018 [1 1000 18]
      1020 [1 1000 20]
      1021 [1 1000 20 1]
      1045 [1 1000 40 5]
      1100 [1 1000 1 100]
      1123 [1 1000 1 100 20 3]))
  (testing "10,000s with hundreds, tens and units place after them"
    (are [actual expected] (= (split-into-terms actual) expected)
      10001 [10 1000 1]
      10020 [10 1000 20]
      10027 [10 1000 20 7]
      10100 [10 1000 1 100]
      10120 [10 1000 1 100 20]
      21125 [20 1 1000 1 100 20 5]
      99999 [90 9 1000 9 100 90 9]))
  (testing "100000s with thousands, tens and units place after them"
    (are [actual expected] (= (split-into-terms actual) expected)
      100001 [1 100 1000 1]
      100020 [1 100 1000 20]
      100027 [1 100 1000 20 7]
      100101 [1 100 1000 1 100 1]
      100120 [1 100 1000 1 100 20]
      100127 [1 100 1000 1 100 20 7]
      101001 [1 100 1 1000 1]
      101020 [1 100 1 1000 20]
      101023 [1 100 1 1000 20 3]
      101101 [1 100 1 1000 1 100 1]
      101120 [1 100 1 1000 1 100 20]
      101127 [1 100 1 1000 1 100 20 7]
      101999 [1 100 1 1000 9 100 90 9]
      110001 [1 100 10 1000 1]
      110010 [1 100 10 1000 10]
      110021 [1 100 10 1000 20 1]
      110101 [1 100 10 1000 1 100 1]
      110111 [1 100 10 1000 1 100 11]
      110234 [1 100 10 1000 2 100 30 4]
      111001 [1 100 11 1000 1]
      121001 [1 100 20 1 1000 1]
      121010 [1 100 20 1 1000 10]
      121011 [1 100 20 1 1000 11]
      121021 [1 100 20 1 1000 20 1]
      121101 [1 100 20 1 1000 1 100 1]
      121111 [1 100 20 1 1000 1 100 11]
      123456 [1 100 20 3 1000 4 100 50 6])))
